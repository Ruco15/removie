# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.                        # The best practice is to be explicit about your dependencies anyway.
    service.anagraficadao:
          class: App\DAO\AnagraficaDAO
          arguments: [ "@doctrine.orm.entity_manager"]
    service.utenti:
              class: App\DAO\UtentiDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.ruoli:
              class: App\DAO\RuoliDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.richiesteregistrazioni:
              class: App\DAO\RichiesteRegistrazioniDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.filmdao:
              class: App\DAO\FilmDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.filmgeneredao:
              class: App\DAO\FilmgenereDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.oscarfilmdao:
              class: App\DAO\OscarFilmDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.tagcolldao:
              class: App\DAO\TagCollDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.tagdao:
              class: App\DAO\TagDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.generedao:
              class: App\DAO\GenereDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.oscardao:
              class: App\DAO\OscarDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.tipidao:
              class: App\DAO\TipiGenericiDAO
              arguments: [ "@doctrine.orm.entity_manager"]
    service.sendemail:
              class: App\Util\SendEmail
              arguments:
                          $twig: '@twig'
                          $mailer: '@mailer'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Modal,Tests,Kernel.php,Exception}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
